
name: erp-lms-service

on:
  push:
    branches:
      - feature/obi/master

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build and push Docker image
      env:
        ECR_REGISTRY: 665403465716.dkr.ecr.ap-south-1.amazonaws.com
        IMAGE_TAG: v1
      run: |
        docker build -t $ECR_REGISTRY/onebillionideas:erp-lms-v1 .
        docker push $ECR_REGISTRY/onebillionideas:erp-lms-v1
  deploy-Container:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: SSH into EC2 instance and deploy Docker container
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_IP }}
        port: ${{ secrets.SERVER_PORT }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.EC2_PASSWORD }}
        script: |
            docker pull 665403465716.dkr.ecr.ap-south-1.amazonaws.com/onebillionideas:erp-lms-v1
            docker stop erp-lms-container || true
            docker rm erp-lms-container || true
            docker run -d --name erp-lms-container -p 8080:8080 665403465716.dkr.ecr.ap-south-1.amazonaws.com/onebillionideas:erp-lms-v1
            
          
  sonar_analyze:
    needs: docker-build-and-push
    name: Maven Sonarqube Analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Create settings.xml file
      run: |
        mkdir -p $HOME/.m2
        echo "${{ secrets.SETTINGS_XML_FILE_B64 }}" | base64 --decode > $HOME/.m2/settings.xml
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build and sonar analyze with Maven
      run: |-
        mvn -B clean jacoco:prepare-agent install jacoco:report sonar:sonar \
        -Dsonar.branch.name=${GITHUB_REF#refs/heads/} \
        -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }} \
        -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }} \
        -Dsonar.coverage.jacoco.xmlReportPaths=./target/site/jacoco/jacoco.xml
            
